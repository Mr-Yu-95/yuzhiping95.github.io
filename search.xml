<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[obj文件格式]]></title>
    <url>%2F2019%2F06%2F13%2Fobj%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[obj文件格式OBJ是一种标准的3D模型文件格式；软件：3dsMax，LightWare，Maya都支持OBJ文件的读写； OBJ是以纯文本的形式存储了模型的顶点、法线和纹理坐标和材质使用信息； 格式：前缀参数1 参数2 参数3……. 前缀 说明 v 表示本行指定一个顶点 此前缀后跟着3个单精度浮点数，分别表示顶点的x，y，z坐标值 vt 表示本行指定一个纹理坐标 此前缀后跟着两个单精度浮点数，分别表示此纹理坐标的u，v值 vn 表示本行指定一个法线向量 此前缀后跟着3个单精度浮点数，分别表示顶点法向量x，y，z坐标值 f 表示本行指定一个表面（Face） 此前缀后面的数据见“面的格式说明” usemtl 此前缀后只跟着一个参数。该参数指定了从此行之后到下一个以usemtl开头的行之间的所有表面所使用的材质名称。该材质可以在此OBJ文件所附属的MTL文件中找到具体信息。 mtllib 此前缀后只跟着一个参数，该参数指定了此OBJ文件所使用的材质库文件（*.mtl） 面的格式说明： f 顶点坐标索引 / 纹理坐标索引 / 顶点法向索引 f Vertex / Texture / Normal 其中，纹理坐标索引/顶点法向索引可以为空； f 1 2 3 等同于 f 1// 2// 3// f 1/3 2/5 3/4 （顶点法向索引为空） f 1/3/4 2/5/6 3/4/2 f 1//4 2//6 3//2 obj格式对纹理的支持是通过关键字mtllib指定的； 1234567newmtl blinn1SG illum 4 Ka 0.2 0.2 0.2 Kd 1 1 1 Ks 0.2 0.2 0.2 Tf 1.00 1.00 1.00 map_Kd carp.bmp Ka——物体材质中环境光的颜色 Kd——物体材质中漫反射光的颜色 Ks——物体材质中镜面光颜色 map_Kd——纹理图像的路径 三角网格的数据结构 三角网格的数据由几何和连接关系组成； 几何包括顶点的x，y，z坐标及顶点的法向量等； 连接关系即三角网格是如何连在一块的； 常用的三角网格数据结构包括： 12345顶点-边（Vertex-Edge）顶点-面（Vertex-Face）邻接矩阵 和 邻接表顶点-边-面半边结构（half Edge） 纹理数据 obj文件中不但包含顶点几何坐标，还可以指定纹理数据，mtllib命令指定了材质属性的文件，材质属性文件中可以指定纹理图像所在的文件。纹理的显示包含三个步骤： 1、生成纹理数据 2、将纹理数据载入纹理内存 3、将纹理数据映射到物体表面 mtl 格式文件 newmtl name #name为材质名称 Ns exponent #exponent指定材质的反射指数，定义了反射高光度 Ka r g b #环境光反射，g和b两参数是可选的，如果只指定了r的值，则g和b的值都等于r的值 Kd r g b #漫反射 Ks r g b #镜面光反射 Ka Kd Ks 都还有其他两种格式，可查阅其他资料： Kd spectral file.rfl factor Kd xyz x y z map_Kd picture.png #固有纹理贴图 map_Ka picture1.png #阴影纹理贴图 map_Ks picture2.png #高光纹理贴图 illum 2 光照模型 光照模型属性如下： 色彩开，阴影色关 色彩开，阴影色开 高光开 反射开，光线追踪开 透明： 玻璃开 反射：光线追踪开 反射：菲涅尔衍射开，光线追踪开 透明：折射开 反射：菲涅尔衍射关，光线追踪开 透明：折射开 反射：菲涅尔衍射开，光线追踪开 反射开，光线追踪关 透明： 玻璃开 反射：光线追踪关 投射阴影于不可见表面 obj文件中，几何实体必须以”V”、”VT”、”VN”或”F”开头，一个几何实体占据一行。所以在解析obj文件的时候，若一行不是以V\VT\VN\F这几个字母开头，就可以忽略掉这行。 下面是几个字母代表的几何实体类型： V：代表顶点。格式为V X Y Z，V后面的X Y Z表示三个顶点坐标。浮点型 VT：表示纹理坐标。上面的立方体有24个纹理坐标，因为每个三角形面的三个顶点，都需要指定一个纹理坐标。格式为VT TU TV。浮点型 VN：法向量。同样，上面立方体也有24个法向量，因为每个三角形的三个顶点都要指定一个法向量。格式为VN NX NY NZ。浮点型 F：面。面后面跟着的整型值分别是属于这个面的顶点、纹理坐标、法向量的索引。面的格式为： f Vertex1/Texture1/Normal1 Vertex2/Texture2/Normal2 Vertex3/Texture3/Normal3 比如这样一行索引f 7/9/21 1/10/22 5/11/23，包含三组索引，构成了一个面。]]></content>
      <tags>
        <tag>三维基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[matlab-obj文件处理]]></title>
    <url>%2F2019%2F05%2F31%2Fobj%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%2F</url>
    <content type="text"><![CDATA[readOBJ1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556function obj = readObj(fname)%% obj = readObj(fname)%% This function parses wavefront object data% It reads the mesh vertices, texture coordinates, normal coordinates% and face definitions(grouped by number of vertices) in a .obj file % %% INPUT: fname - wavefront object file full path%% OUTPUT: obj.v - mesh vertices% : obj.vt - texture coordinates% : obj.vn - normal coordinates% : obj.f - face definition assuming faces are made of of 3 vertices%% Bernard Abayowa, Tec^Edge% 11/8/07% set up field typesv = []; vt = []; vn = []; f.v = []; f.vt = []; f.vn = [];fid = fopen(fname);% parse .obj file while 1 tline = fgetl(fid); if ~ischar(tline), break, end % exit at end of file ln = sscanf(tline,'%s',1); % line type %disp(ln) switch ln case 'v' % mesh vertexs v = [v; sscanf(tline(2:end),'%f')']; case 'vt' % texture coordinate vt = [vt; sscanf(tline(3:end),'%f')']; case 'vn' % normal coordinate vn = [vn; sscanf(tline(3:end),'%f')']; case 'f' % face definition fv = []; fvt = []; fvn = []; str = textscan(tline(2:end),'%s'); str = str&#123;1&#125;; nf = length(findstr(str&#123;1&#125;,'/')); % number of fields with this face vertices [tok str] = strtok(str,'//'); % vertex only for k = 1:length(tok) fv = [fv str2num(tok&#123;k&#125;)]; end if (nf &gt; 0) [tok str] = strtok(str,'//'); % add texture coordinates for k = 1:length(tok) fvt = [fvt str2num(tok&#123;k&#125;)]; end end if (nf &gt; 1) [tok str] = strtok(str,'//'); % add normal coordinates for k = 1:length(tok) fvn = [fvn str2num(tok&#123;k&#125;)]; end end f.v = [f.v; fv]; f.vt = [f.vt; fvt]; f.vn = [f.vn; fvn]; endendfclose(fid);% set up matlab object obj.v = v; obj.vt = vt; obj.vn = vn; obj.f = f; 数据处理12345678910111213141516Path = 'E:\faceposes\';File = dir(fullfile(Path,'*.obj')); FileNames = &#123;File.name&#125;'; Length_Names = size(FileNames,1);A=[];for k = 1 : 9 K_Trace = strcat(Path, FileNames(k)); m=K_Trace&#123;1,1&#125;; obj = readObj(m); objv=obj.v; X=objv(:,1:3)'; test=reshape(X,1,[]); A=[A;test];endsave faceposes A;]]></content>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科研论文写作]]></title>
    <url>%2F2019%2F05%2F27%2F%E7%A7%91%E7%A0%94%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[科研论文写作 \begin{array}{c}{\min _{G} \max _{D_{i}} E_{f^{*} \sim \operatorname{prior}(f)}\left[\log D_{i}\left(f^{*}\right)\right]+} \\ {E_{x \sim p_{d}(x)}\left[\log \left(1-D_{i}\left(G_{e n c}(x)\right)\right)\right]}\end{array}科技论文的写作目的是交流学术思想和科学发现。 明确知道为什么写这篇文章，文章为谁而写，要表述什么，读者群是哪些人，要告诉读者何种信息，要有清晰的概念。 every single word that i publish i write at least six times. Paul Halmos 摘要的目的是简要告诉读者这篇文章的主要内容，要研究的问题，有什么新的结论或者发现。 引言应对摘要做出更详细的说明和拓展。]]></content>
      <tags>
        <tag>论文写作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[《人间失格》摘录]]></title>
    <url>%2F2019%2F05%2F12%2F%E4%BA%BA%E9%97%B4%E5%A4%B1%E6%A0%BC%E7%BB%8F%E5%85%B8%E8%AF%AD%E5%BD%95%2F</url>
    <content type="text"><![CDATA[所谓世人相互轻蔑却又彼此来往 并一起自我作贱——这就是世上所谓“朋友”的真面目。 胆小鬼连幸福都会害怕，碰到棉花都会受伤，有时还被幸福所伤。 我知道有人是爱我的，但我好像缺乏爱人的能力。 若能避开猛烈的狂喜，自然不会有悲痛来袭。 所谓世人，不就是你吗？ 人啊，明明一点儿也不了解对方，错看对方，却视彼此为独一无二的挚友，一生不解对方的真性情，待一方撒手西去，还要为其哭泣，念诵悼词。 我的不幸，恰恰在于我缺乏拒绝的能力。我害怕一旦拒绝别人，便会在彼此心里留下永远无法愈合的裂痕。 唯有尽力自持，方不致癫狂。 如今的我，谈不上幸福，也谈不上不幸。 一切都会过去的。 在所谓“人世间”摸爬滚打至今， 我唯一愿意视为真理的，就只有这一句话。 一切都会过去的。 没有人在遭受别人责难与训斥时，还能愉快起来，但我却从人们生气的怒容中看到比狮子、鳄鱼、巨龙更可怕的动物本性。平时他们都将这些本性隐藏着，可一旦找到机会，就会像那些在草原上温文尔雅的牛，忽然甩动自己的尾巴抽死自己肚子上的牛虻。 我仍然认为向人诉苦不过是徒劳，与其如此，不如默默承受。 人是不可能一边攥紧拳头一边微笑的，唯有猴子才会那样。 我这一生，尽是可耻之事。 我并不怕死，但若是受伤流血，变成残废，我可不要。 纯真的信赖之心，果然是罪恶的源泉。 生而为人，我很遗憾。 也许所谓的热情，就是无视对方的立场。 对讨厌的事说不出讨厌，对喜欢的事也总是偷偷摸摸。 时间的流逝是平等赋予每个人的疗愈，或许也是救赎。 其实我是一个很软弱的人，总会受制于他人的暗示。 家里的事不可说，身上的痛苦不可说，对明日的畏惧不可说，对世人的疑惑不可说，昨日之耻不可说。]]></content>
      <tags>
        <tag>摘抄</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[matlab备忘录]]></title>
    <url>%2F2019%2F05%2F12%2Ffilename%2F</url>
    <content type="text"><![CDATA[保存变量使用save语句保存变量 保存工作空间所有的变量到data1.mat中1save data1 将工作空间的m变量保存到data2.mat中，如果工作空间没有m会报错。1save data2 m 将工作空间中的 m n p v 四个变量保存到data3.mat中，如果工作空间没有这四个变量中的一个也会报错。1save data3 m n p v 加载加载数据1x = load('e:\study\data.mat') 转换矩阵格式A代表要转换的矩阵，m,n代表二维数组中行和列。两种用法效果是一样的都是将A转换成m行n列的二维数组。12B=reshape(A,m,n)B=reshape(A,[m n]) 如果仅仅知道要转换后的行或者列也可以用占位符代替其中一个12B=reshape(A,m,[])B=reshape(A,[],n) 如果要转换成更高维数组在m,n后面加上数字即可如1B=reshape(A,3，2，2) reshape是按列存取数据的 矩阵求和对矩阵各列元素求和1b=sum(a) 对矩阵各行元素求和1b=sum(a，2) 对矩阵所有元素求和1d=sum(sum(a)) 保存txt文件1save('output.txt','data','-ascii') matlab 输出变量到txt文本时会采用科学计数的形式为了避免，可以先存放在excel，然后转为txt]]></content>
      <tags>
        <tag>matlab</tag>
      </tags>
  </entry>
</search>
